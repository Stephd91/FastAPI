name: CI Pipeline

on:
  push:
    tags:
      - '*'
    branches:
     - "main"
#  workflow-dispatch

jobs:
  # run-tests:
      # runs-on: ubuntu-latest
      # steps:
          # -
          #   name:
          #   uses:

  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile # Our API container is created using the dockerfile 
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/fastapiproject:latest
        # tags: ${{ secrets.DOCKERHUB_USERNAME }}/fastapiproject:${{ github.ref_name }}

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps: # Lets start our web app from the docker compose file 
  #   -     
  #     name: Login to Docker Hub
  #     uses: docker/login-action@v3
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}
  #   -
  #     name: Pull the latest image from Docker Hub
  #     run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/fastapiproject:latest

  #   -
  #     name: Checkout
  #     uses: actions/checkout@v4
  #   -
  #     name: Add databased credentials to allow api connection 
  #     working-directory: .
  #     run: |
  #       mkdir db
  #       cd db
  #       echo "yourpassword" > password.txt
  #   -
  #     name: Add .env file for sqlalchemy connection
  #     working-directory: ./app
  #     run: |
  #       echo -e "DB_USER=postgres\nDB_PASSWORD=yourpassword\nDB_HOST=db\nDB_PORT=5432\nDB_NAME=learn_de" > .env
  #   - 
  #     name: Deploy to localhost with Docker Compose Action
  #     uses: isbang/compose-action@v1.5.1
  #     with:
  #       compose-file: "./compose.yaml"
  #   # -
  #   #   name: Deploy to localhost with Docker Compose Action
  #   #   run: |
  #   #     docker-compose up -d


